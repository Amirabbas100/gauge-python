name: build

on: [push, pull_request]

jobs:
  test:
    name: UTs ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test
        run: |
          python build.py --test

  functional-tests:
    needs: test
    env:
      GAUGE_TELEMETRY_ENABLED: false
    name: FTs ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Build plugin
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python build.py --dist

      - name: Install gauge and (linux)
        if: matrix.os != 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install --prefix=/tmp/gauge

      - name: Install gauge (windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install

      - name: Install Python and Run FTs (linux)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          export GAUGE_PYTHON_VERSION=$(cd bin; ls gauge-python-*.zip | sed "s/^gauge-python-\([^;]*\).zip/\1/")

          gauge uninstall python
          gauge install python -f "bin/gauge-python-${GAUGE_PYTHON_VERSION}.zip"

          pip install "dist/getgauge-${GAUGE_PYTHON_VERSION}.tar.gz"

          export TAGS="python"
          git clone https://github.com/getgauge/gauge-tests
          cd gauge-tests
          gauge install

          ./gradlew clean pythonFT

      - name: Install Python (windows)
        if: matrix.os == 'windows-latest'
        run: |
          set PATH="C:\\Program Files\\gauge\\bin";%PATH%

          gauge uninstall python
          cd bin
          for %%f in (gauge-python*) do gauge install python -f "%%f"
          cd ..

          cd dist
          for %%f in (getgauge*) do pip install "%%f" --upgrade
          cd ..

          set TAGS="python"
          git clone https://github.com/getgauge/gauge-tests
          cd gauge-tests
          gauge install

      - name: Run FTs (windwos)
        if: matrix.os == 'windows-latest'
        run: |
          ${env:PATH} += ";C:\Program Files\gauge\bin"
          cd gauge-tests
          .\gradlew.bat clean jsFT
        shell: pwsh

  lsp-tests:
    needs: test
    env:
      GAUGE_TELEMETRY_ENABLED: false
    name: LSP Tests ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Use Node.js
        uses: actions/setup-node@v1

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Build plugin
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python build.py --dist

      - name: Install gauge and (linux)
        if: matrix.os != 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install --prefix=/tmp/gauge

      - name: Install Python (linux)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          export GAUGE_PYTHON_VERSION=$(cd bin; ls gauge-python-*.zip | sed "s/^gauge-python-\([^;]*\).zip/\1/")

          gauge uninstall python
          gauge install python -f "bin/gauge-python-${GAUGE_PYTHON_VERSION}.zip"

          pip install "dist/getgauge-${GAUGE_PYTHON_VERSION}.tar.gz"

      - name: Run LSP tests (linux)
        if: matrix.os != 'windows-latest'
        run: |
          export PATH=${PATH}:/tmp/gauge/bin
          export TAGS="python"
          git clone https://github.com/getgauge/gauge-lsp-tests
          cd gauge-lsp-tests
          gauge install
          npm install

          gauge run --tags='!knownIssue & (actions_on_project_load | actions_on_file_edit)' --env=python-wd

      - name: Install gauge (windows)
        if: matrix.os == 'windows-latest'
        run: |
          git clone https://github.com/getgauge/gauge
          cd gauge
          go run build/make.go --verbose
          go run build/make.go --install


      - name: Install Python (windows)
        if: matrix.os == 'windows-latest'
        run: |
          set PATH="C:\\Program Files\\gauge\\bin";%PATH%

          gauge uninstall python
          cd bin
          for %%f in (gauge-python*) do gauge install python -f "%%f"
          cd ..

          cd dist
          for %%f in (getgauge*) do pip install "%%f" --upgrade
          cd ..

      - name: Run LSP tests (windows)
        if: matrix.os == 'windows-latest'
        run: |
          set PATH="C:\\Program Files\\gauge\\bin";%PATH%
          set TAGS="python"
          git clone https://github.com/getgauge/gauge-lsp-tests
          cd gauge-lsp-tests
          gauge install
          npm install
          gauge run --tags="!knownIssue & (actions_on_project_load | actions_on_file_edit)" --env=python-wd
